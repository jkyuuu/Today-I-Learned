[자바 플랫폼의 3대 구성요소]
 - 자바 개발 키트 (Java Development Kit, JDK)
 - 자바 가상 머신 (Java Virtual Machine, JVM)
 - 자바 런타임 환경 (Java Runtime Environment, JRE)
 
 1. Java 구성요소
  - 런타임 환경 : 다른 소프트웨어를 실행하기 위해 고안된 소프트웨어
  - JRE : 자바 클래스 라이브러리(Java Class Libraries) + 자바 클래스 로더(Java Class Loader) + 자바 가상 머신(Java Virtual Machine)
  
  - 자바 클래스 로더 : 올바르게 클래스를 로드해 코어 자바 클래스 라이브러리에 연결하는 역할
  - JVM : 자바 애플리케이션이 디바이스 or 클라우드 환경에서 실행되는 데 필요한 리소스를 확보하도록 보장하는 역할
  - JRE : 주로 다른 구성요소의 컨테이너이며, 각 구성 요소의 활동을 조율
  
  (JDK 다운로드하면 호환버전의 JRE가 포함되고 JRE에는 기본 JVM이 포함된다. JRE를 JDK와 별개로 다운로드 가능하고 JVM에서도 선택가능하지만 기본값 사용.

 2. 런타임 환경
  - 소프트웨어 실행할 환경
  - 프로그램 실행 위해 클래스파일을 로드하고 메모리 및 기타 시스템 리소스에 대한 액세스를 확보
  - 과거에는 운영체제를 런타임 환경으로 사용
  - 프로그램은 해당 프로그램이 위치한 컴퓨터 내에서 실행됐지만 리소스(메모리, 프로그램 파일, 종속성 등) 액세스는 운영체제 설정에 의존.
    --> 자바 런타임 환경은 적어도 자바 프로그램에서는 이런 틀을 바꿈.
    
  3. " Write Once, Run Anywhere (WORA)"
   - '한번 쓰고, 모든 곳에서 실행한다' 라는 자바의 원칙
  
  4. JRE
   - 소프트웨어는 시스템 하드웨어 위에 위치하는 일련의 계층으로 볼 수 있다.
   - 각 계층은 그 위의 계층이 사용하거나 필요한 서비스를 제공한다.
   
   - 자바 런타임 환경 : 컴퓨터 운영체제 위에서 실행되면서 자바를 위한 부가적인 서비스를 제공하는 소프트웨어 계층.
   - JRE는 다양한 운영체제의 요철을 매끄럽게 다듬어 자바 프로그램이 거의 모든 운영체제에서 수정 없이 실행되도록 한다.
   - '자동 메모리 관리'는 프로그래머가 메모리 할당과 재할당을 수동으로 조작할 필요가 없게 해주는 JRE의 중요한 서비스 이다.
   --> 다시 말해, JRE는 자바 프로그램 실행을 위한 일종의 메타 운영체제이다. 추상화의 전형적인 사례로, 기반 운영체제를 자바 어플리케이션 실행을 위한 일관적인 플랫폼으로 추상화한다.
   
   5. JRE와 JVM의 상호작용
    - JVM : 라이브 자바 프로그램 실행을 담당하는 실행 소프트웨어 시스템.
    - JRE는 자바 코드를 받아서 필요한 라이브러리와 결합한 다음 이 코드를 실행할 JVM을 시작하는 온디스크 시스템이다.
    
    
    
