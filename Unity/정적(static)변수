<정적(static)변수>

1. 정적변수
  - 클래스에 속해 있는 변수이며, 클래스가 생성하는 객체에는 존재하지 않는다.
  - 즉, 정적 변수가 특정 클래스의 객체에 상관없이, 같은 값을 유지한다는 것을 의미한다.
  - 또한 클래스가 메모리에 있는 한, 항상 참조가 가능하다는 특성을 가진다.
  - 정적 변수는 클래스가 만들어지기 직전에, 다른 변수와 메소드보다 먼저 컴파일러에 의해 초기화 된다.
  --> 결론적으로 변수를 수정하거나 읽을 때, 클래스 객체를 만들 필요가 없다는 뜻이다.
  --> 오직 한번만 게임오브젝트와 컴포넌트들의 참조를 얻으면 된다.
  
2. 예시
  - 한 씬에 5개의 적이 있고, 모든 적들이 Player의 Transform을 필요로 하는 A.I 스크립트를 가진다고 가정해보자.
  
  (1) Awake() 에서 정적 변수를 사용하지 않는 경우
  
  public class Enemy : MonoBehaviour
    
    private Transform playerTransform;
    
    void Awake()
    {
        playerTransform = GameObject.FindWithTag("Player").GetComponent<Transform>();
    }
    
  
  (2) 딱 한번의 정적 변수를 사용, Player에 해당하는 스크립트 하나에서 Player Transform을 얻고, 이를 정적 변수로 저장한다.
  
  public class PlayerController : MonoBehaviour
  
    public static Transform playerTransform;  
      
    void Awake()  
    {  
        playerTransform = GameObject.FindWithTag("Player").GetComponent<Transform>();  
    }
    
  --> 그 후 적의 A.I 스크립트가 Player 위치를 알아야 할 때
  
  public class EnemyBehaviour: MonoBehaviour   
  
    void Update()  
    {   
        if(GameController.playerTransform.position.x > 100)  
        {  
            //Do something  
        }         
    }
    

3. 예시 설명
  - (2)에서 Player Transform을 알기 위해 단 한번의 Awake()를 호출한 반면, (1)에서는 적 하나하나 호출하여 총 5번을 호출하게 된다.
  - (2)의 적에서 player Transform 호출 시 여전히 한번의 Awake()는 호출 해야 하지만 정적변수를 사용함으로써 결국 각 적마다 호출 할 필요는 없는 것이다.
  

4. 정적변수의 활용
  - Awake(), Start()에서 반복적으로 사용해야 하는 게임 오브젝트나 컴포넌트의 참조를 저장할 때 사용하는 것이 좋다.
  - 더불어 게임의 진행 혹은 룰에 관련된 기본형 변수 또한 정적 변수 사용하는 것이 좋을 수 있다. 
  (게임 점수, 플레이어 체력, 게임 상태(playing, paused, game over), 플레이어 상태(respawn, alive, dead))
  
5. 사용하지 말아야 할 때
  - 위의 예시 말고 그밖에 다른 용도는 사용하지 않는 것이 좋다.
  - 별다른 방법 없거나, 싱글톤 패턴 구현하는 경우 아니라면, 정적 변수 사용을 피해야 한다.
  - 성능 향상에 도움되는 것이 명확하지 않다면 정적변수 만들지 않는다.
  (다양한 스크립트에 있는 모든 객체의 참조를 정적 변수로 만드는 것은 그렇지 않는 것보다 더 쉽지만, 이는 이미 만들어진 클래스에 불필요한 코드 리펙토링을 초래할 수도 있다.
  유니티에서, 정적 변수에 관련해서는,  적은 것이 많은 것보다 확실히 낫다고 한다.)
  
6. 스크립트 시작부분에 정적변수 값을 항상 초기화 해야 한다.
  - 이는 정적 변수를 덜 사용해야 하는 또 다른 이유이기도 하다.
  
  public class GameController : MonoBehaviour   
  {    
     public static bool isDead = false;  
      
      void Update ()   
      {  
          if(isDead)  
          {  
              //Loads the 'Game Over' scene  
              Application.LoadLevel("GameOver");  
          }  
      }  
  }
  
  
  --> 위의 스크립트는 잘 작동하고 메인 캐릭터가 죽은 다음 유니티3D는 'GameOver' 씬을 로드할 것이다.
  --> 그리고 다시 플레이하기 위해 게임 씬으로 돌아 왔을 때, 유니티3D는 즉시 'GameOver' 씬으로 바꾸어버릴 것이다.
  --> 정적 변수는 클래스 변수이고, 이 값은 클래스가 메모리에 존재하는 한 계속해서 유지 될 것이며, 이 말은 5번째 라인은 게임이 실행될 때 딱 한번 실행될 것이라는 의미이다.
  --> 위의 예제를 본 다면, isDead는 계속 true일 것이다. 만약 스크립트의 시작 부분에 isDead변수를 초기화하지 않는다면, 계속해서 이런 일이 발생할 것이다.

      void Awake()  
      {
          isDead = false;  
      }  
      
  --> 그러므로 Awake()를 통해 isDead 정적변수를 초기화해 줘야 한다.
  
  

출처: https://unityindepth.tistory.com/51 [UNITY IN DEPTH]
