<원과 파이(π), Radian, 운동>

1. 파이(π)
 - 원의 지름을 1이라고 했을 때, 그 원의 둘레가 3.14 라는 것으로 파이(π)라고 함.
 - 즉, π는 원주를 지름으로 나눈값이 되는것이다.
 - π = 원주/지름 = (원주/2) / (지름/2) = 반원주/반지름
  ex) 반지름이 1이라면, 원 둘레는 2π이고 반원주는 π 이다

 - Unity Inspector 창의 Transform.Rotation에서 사용하는 것을 한국어로 60분법, 영어로는 Degree라고 함.
 - 즉, 45º,  90º, 180º, 360º 와 같이 각도를 표현하는 것


2. Radian
 - 원 위의 두 점을 끝으로 하는 원의 일부를 '호'라고 함.
 - Radian(호도법)은 각도를 나타내는 Degree와는 다른 표현
 - 부채꼴 모양의 호의 길이로서 θ(세타)의 각도를 표현하는 것이고, 반지름이 1일 때 호의 길이도 1이라면, θ(세타)를 1 rad 라고 표현하자는 법칙이다.
 - 위 파이(π)의 설명에서 반지름이 1일 때, 반원주는 파이(π)인 경우, 반원주 파이(π)의 각도는 180도가 된다.
  => 이것을 π(파이) rad(라디안) 이라고 한다. 360도는 2π(파이) rad(라디안) 이고, 90도 = (π/2)rad, 45도 = (π/4)rad 이다. 

 - 즉, 1 rad는 반지름이 1이고, 호의 길이도 1일 때의 각을 다른 법칙으로 표현하는 것.
  => 1 rad = (180º / π)º
 - 이것이 Radian을 Degree로 변환하는 공식이다.

 - 반대로, Degree를 Radian으로 변환하면
  => 1º = (π / 180º) rad
  => 360º = 2π rad


예시)

 Transform transform;
    Vector3 pointVector;
    
    public int speed = 1;
    private int degree = 0; 

    void Start () {
           transform = GetComponent<Transform>();
    }
	
    void Update () {
          if (Input.GetKey(KeyCode.UpArrow))
          {
              degree += speed;
              float radian = degree * Mathf.PI / 180; //라디안값

             pointVector.x += 2f * Mathf.Cos(radian);
             pointVector.y += 2f * Mathf.Sin(radian);

              transform .position = pointVector;
          }
    }


해석)

 - degree * Mathf.PI / 180 는 Degree 값을 Radian 값으로 변환하는 공식
 - 1º = (π / 180º) rad
 - 즉, 1도는 (180도 분의 π) rad 인데, (180도 분의 π) rad에 degree를 곱하면 누를 수록 더해지는 rad 값이 나옴.

 - pointVector.x += 2f * Mathf.Cos(radian)
  => 이는 구해진 radian 값으로 Cos을 구하면 'cosθ = 밑변/빗변' 이기 때문에 반지름이 1이라고 할 때 'cosθ = 밑변' 값이 된다. 밑변은 Vector3의 x 값이 된다.
 - pointVector.y += 2f * Mathf.Sin(radian)
  => 이는 구해진 radian 값으로 Sin을 구하면 'sinθ = 높이/빗변' 이기 때문에 반지름이 1이라고 할때 'sinθ = 높이' 값이 된다. 높이는 Vector3의 y 값이 된다.
 - 즉, (x,y) 의 한 점이 정해지면 2만큼 떨어진 위치에서 원을 그리며 이동하게 된다.
